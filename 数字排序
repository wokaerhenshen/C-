/*

3.数字排序
题目描述： 给定字符串内有很多正整数，要求对这些正整数进行排序，然后返回排序后指定位置的正整数，排序要求：按照每一个正整数的后三位数字组成的整数进行从小到大排序（1）如果不足三位，则按照实际位数组成的整数进行比较（2）如果相等，则按照输入字符中的原始顺序排序

说明：（1）字符串以‘\0’结尾，仅包含数字、空格（2）字符串内正整数之间以单个空格分隔，字符串首尾没有空格（3）正整数格式为十进制，大小1~1000000，正整数的数字非零开始

输入描述：第一行为一个整数字符串，里面包含若干个整数，以空格分割，第二行为一个整数，即指定的位置

输出描述：输出指定位置的整数

 */



using System;

namespace number_order
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            string s = Console.ReadLine();
            string index = Console.ReadLine();
            NumberOrder(s, index);
        }

        public static void NumberOrder(string s, string index)
        {
            //1.get the string and split it into a string array
            string[] array = s.Split(" ");
            int[] intArray = new int[array.Length];

            //2.loop the string and push the new elements to the int array
            for(int i = 0; i<array.Length;  i++)
            {
                //2.1 transfer the string element to a good integer
                int intElement = stringToInt(array[i]);

                //2.2 push this int to the int array
                intArray[i] = intElement;

            }
            //3.order the int array and get the number with the required index
            Array.Sort(intArray);

            //指定位置的整数，这边应该从第一位开始算，而不是第0位 ，咬文嚼字一下。。。
            Console.WriteLine(intArray[Int32.Parse(index)-1]);
            //Console.WriteLine(index);
        }

        public static int stringToInt(string s)
        {
            string fixedS = s.Substring(Math.Max(0, s.Length - 3));
            return Int32.Parse(fixedS);
        }


    }
}
